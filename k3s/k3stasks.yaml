---
- name: Deploy PosgreSQL
  hosts: localhost
  tasks:
    - name: Run PostgreSQL via Docker
      command: docker-compose up -d
      args:
        chdir: ../docker
- name: K3s 2 Room Deployment Configuration
  gather_facts: False
  hosts: room1,room2
  tasks:
    - name: Copy k3s config file
      become: yes
      copy:
        src: ./config.yaml
        dest: /etc/rancher/k3s/
        mode: 0644
    - name: Setup k3s config file
      become: yes
      ansible.builtin.replace:
        path: /etc/rancher/k3s/config.yaml
        regexp: "REPLACE-NODE-NAME"
        replace: "{{ inventory_hostname }}"
- name: Setup Room 1
  hosts: room1
  tasks:
    - name: Install K3s
      become: yes
      shell: curl -sfL https://get.k3s.io | sh -
      ignore_errors: yes
      async: 30
      poll: 5
    - name: Ensure k3s is running on Room 1
      become: yes
      ansible.builtin.systemd:
        state: restarted
        #daemon_reload: yes
        name: k3s
    - name: Get k3s token
      become: yes
      command: cat /var/lib/rancher/k3s/server/token
      register: k3stoken
    - name: Print the k3s token
      debug:
        msg: "The generated token is {{k3stoken.stdout}}"
      # set_fact:
      #   K3S_TOKEN: "{{lookup('file', '/var/lib/rancher/k3s/server/token') }}"
- name: Setup other Rooms
  hosts: room2
  tasks:
    - name: Update token
      become: yes
      ansible.builtin.replace:
        path: /etc/rancher/k3s/config.yaml
        regexp: "{{ inventory_hostname }}"
        replace: "{{ inventory_hostname }}\ntoken: {{hostvars['room1']['k3stoken'].stdout}}"
    - name: Install K3s
      become: yes
      shell: curl -sfL https://get.k3s.io | sh -
      register: wp
      failed_when: wp.rc not in [0,1]
